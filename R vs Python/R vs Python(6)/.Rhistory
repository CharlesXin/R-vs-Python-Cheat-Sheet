mtcars
knitr::opts_chunk$set(echo = TRUE)
head(mtcars, 5)
mtcars[order(mpg),]
mtcars[order(mtcars$mpg), ]
head(mtcars[order(mtcars$mpg, mtcars$cyl),], 10)
head(mtcars[order(mtcars$mpg, mtcars$cyl),], 50)
head(mtcars[order(mtcars$mpg, mtcars$drat),], 50)
head(mtcars[order(mtcars$mpg, -mtcars$drat), 10])
head(mtcars[order(mtcars$mpg, mtcars$drat),], 10)
head(mtcars[order(mtcars$mpg, -mtcars$drat), ], 10)
```{r}
# mtcars is a sample dataset from R
head(mtcars, 5) # look up the first five rows of this dataset
# now if we want sort it by column "mpg"
head(mtcars[order(mtcars$mpg), ], 10)
# now if we want sort it by column "mpg" and "drat"
head(mtcars[order(mtcars$mpg, mtcars$drat), ], 10)
#now if we want sort it by "mpg" (ascending) and "drat" (descending)
head(mtcars[order(mtcars$mpg, -mtcars$drat), ], 10)
print("Dataset mtcars")
head(mtcars, 5) # look up the first five rows of this dataset
# now if we want sort it by column "mpg"
print("Sort it by column mpg")
head(mtcars[order(mtcars$mpg), ], 10)
# now if we want sort it by column "mpg" and "drat"
print("Sort it by column mpg and drat")
head(mtcars[order(mtcars$mpg, mtcars$drat), ], 10)
# now if we want sort it by "mpg" (ascending) and "drat" (descending)
print("Sort it by column mpg (ascending) and drat (descending)")
head(mtcars[order(mtcars$mpg, -mtcars$drat), ], 10)
# mtcars is a sample dataset from R
print("Dataset mtcars /n")
head(mtcars, 5) # look up the first five rows of this dataset
# now if we want sort it by column "mpg"
print("Sort it by column mpg")
head(mtcars[order(mtcars$mpg), ], 10)
# now if we want sort it by column "mpg" and "drat"
print("Sort it by column mpg and drat")
head(mtcars[order(mtcars$mpg, mtcars$drat), ], 10)
# now if we want sort it by "mpg" (ascending) and "drat" (descending)
print("Sort it by column mpg (ascending) and drat (descending)")
head(mtcars[order(mtcars$mpg, -mtcars$drat), ], 10)
iris
head(iris[order(iris$Sepal.Length, -iris$Sepal.Width), ], 10)
knitr::opts_chunk$set(echo = TRUE)
iris = read.csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv')
iris
getwd()
# read a csv file
iris = read.csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv')
# write it to a csv file called "iris.csv", without saving the row names
write.csv(iris, file = "iris.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
# read a csv file
iris = read.csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv')
# check your data
head(iris, 5)
# check your saving directory
getwd()
# write it to a csv file called "iris_R.csv", without saving the row names
write.csv(iris, file = "iris_R.csv", row.names = F)
write.table(mydata, "c:/mydata.txt", sep="\t")
write.table(iris, "iris.txt", sep="\t")
install.packages("data.table")
library(data.table)
iris = fread('iris.txt')
# check your data
head(iris, 5)
iris = fread('iris.txt',
header = T)
# check your data
head(iris, 5)
install.packages("data.table")
library(data.table)
iris = fread(input = 'iris.txt',
na.strings="NA", # A character vector of strings which are to be interpreted as NA values
stringsAsFactors=FALSE, # Convert all character columns to factors?
nrows=-1L, # The number of rows to read, by default -1 means all
colClasses=c("integer", "numeric", "numeric", "numeric", "numeric", "factor") # A character vector of classes (named or unnamed)
)
# assign column names
setnames(iris, c("sepal_length ", "sepal_width", "petal_length", "petal_width", "class"))
# check your data
head(iris, 5)
install.packages("data.table")
knitr::opts_chunk$set(echo = TRUE)
iris = fread(input = 'iris.txt',
na.strings="NA", # A character vector of strings which are to be interpreted as NA values
stringsAsFactors=FALSE, # Convert all character columns to factors?
nrows=-1L, # The number of rows to read, by default -1 means all
colClasses=c("integer", "numeric", "numeric", "numeric", "numeric", "factor") # A character vector of classes (named or unnamed)
)
# assign column names
setnames(iris, c("sepal_length ", "sepal_width", "petal_length", "petal_width", "class"))
library(data.table)
iris = fread(input = 'iris.txt',
na.strings="NA", # A character vector of strings which are to be interpreted as NA values
stringsAsFactors=FALSE, # Convert all character columns to factors?
nrows=-1L, # The number of rows to read, by default -1 means all
colClasses=c("integer", "numeric", "numeric", "numeric", "numeric", "factor") # A character vector of classes (named or unnamed)
)
# assign column names
setnames(iris, c("sepal_length ", "sepal_width", "petal_length", "petal_width", "class"))
# assign column names
setnames(iris, c("id", "sepal_length ", "sepal_width", "petal_length", "petal_width", "class"))
# check your data
head(iris, 5)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
iris = read.csv("iris.csv")
colnames(iris)
# We will keep using iris dataset as an example.
library(data.table)
iris = read.csv("iris.csv")
# Get the column names of iris
colnames(iris)
# change name of the fifth column from "species" to "Class"
colnames(iris)[5] = "Class"
colnames(iris)
# change which column name is "Class" to "species"
colnames(iris)[colnames(iris) == "Class"] = "species"
colnames(iris)
library(data.table)
iris = read.csv("iris.csv")
